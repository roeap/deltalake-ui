// @generated by protoc-gen-connect-query v1.4.1 with parameter "target=ts,import_extension=none"
// @generated from file lakehouse/data/v1alpha1/api.proto (package lakehouse.data.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { GetSharingServerRequest, GetSharingServerResponse, GetTablesRequest, GetTablesResponse, ListSharingServersRequest, ListSharingServersResponse, QueryRequest, QueryResponse } from "./api_pb";

/**
 * Execute a query
 *
 * @generated from rpc lakehouse.data.v1alpha1.QueryService.Query
 */
export const query = {
  localName: "query",
  name: "Query",
  kind: MethodKind.Unary,
  I: QueryRequest,
  O: QueryResponse,
  service: {
    typeName: "lakehouse.data.v1alpha1.QueryService"
  }
} as const;

/**
 * @generated from rpc lakehouse.data.v1alpha1.QueryService.GetTables
 */
export const getTables = {
  localName: "getTables",
  name: "GetTables",
  kind: MethodKind.Unary,
  I: GetTablesRequest,
  O: GetTablesResponse,
  service: {
    typeName: "lakehouse.data.v1alpha1.QueryService"
  }
} as const;

/**
 * List all registered sharing servers
 *
 * @generated from rpc lakehouse.data.v1alpha1.QueryService.ListSharingServers
 */
export const listSharingServers = {
  localName: "listSharingServers",
  name: "ListSharingServers",
  kind: MethodKind.Unary,
  I: ListSharingServersRequest,
  O: ListSharingServersResponse,
  service: {
    typeName: "lakehouse.data.v1alpha1.QueryService"
  }
} as const;

/**
 * @generated from rpc lakehouse.data.v1alpha1.QueryService.GetSharingServer
 */
export const getSharingServer = {
  localName: "getSharingServer",
  name: "GetSharingServer",
  kind: MethodKind.Unary,
  I: GetSharingServerRequest,
  O: GetSharingServerResponse,
  service: {
    typeName: "lakehouse.data.v1alpha1.QueryService"
  }
} as const;
